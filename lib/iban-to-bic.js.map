{"version":3,"file":"iban-to-bic.js","mappings":"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","sources":["webpack://ibanToBic/./node_modules/ibantools/jsnext/ibantools.js","webpack://ibanToBic/./datasets/index.ts","webpack://ibanToBic/./src/index.ts","webpack://ibanToBic/webpack/bootstrap","webpack://ibanToBic/webpack/runtime/define property getters","webpack://ibanToBic/webpack/runtime/hasOwnProperty shorthand","webpack://ibanToBic/webpack/runtime/make namespace object","webpack://ibanToBic/webpack/startup"],"sourcesContent":["/*!\n * @license\n * Copyright Saša Jovanić\n * Licensed under the Mozilla Public License, Version 2.0 or the MIT license,\n * at your option. This file may not be copied, modified, or distributed\n * except according to those terms.\n * SPDX-FileCopyrightText: Saša Jovanić\n * SPDX-License-Identifier: MIT or MPL/2.0\n */\n/**\n * Validation, extraction and creation of IBAN, BBAN, BIC/SWIFT numbers plus some other helpful stuff\n * @package Documentation\n * @author Saša Jovanić\n * @module ibantools\n * @version 4.5.1\n * @license MIT or MPL-2.0\n * @preferred\n */\n'use strict';\n/**\n * Validate IBAN\n * ```\n * // returns true\n * ibantools.isValidIBAN(\"NL91ABNA0417164300\");\n * ```\n * ```\n * // returns false\n * ibantools.isValidIBAN(\"NL92ABNA0517164300\");\n * ```\n * ```\n * // returns true\n * ibantools.isValidIBAN('CH4431999123000889012');\n * ```\n * ```\n * // returns false\n * ibantools.isValidIBAN('CH4431999123000889012', { allowQRIBAN: false });\n * ```\n */\nexport function isValidIBAN(iban, validationOptions) {\n    if (validationOptions === void 0) { validationOptions = { allowQRIBAN: true }; }\n    if (iban === undefined || iban === null)\n        return false;\n    var reg = new RegExp('^[0-9]{2}$', '');\n    var countryCode = iban.slice(0, 2);\n    var spec = countrySpecs[countryCode];\n    if (spec === undefined || spec.bban_regexp === undefined || spec.bban_regexp === null || spec.chars === undefined)\n        return false;\n    return (spec.chars === iban.length &&\n        reg.test(iban.slice(2, 4)) &&\n        isValidBBAN(iban.slice(4), countryCode) &&\n        isValidIBANChecksum(iban) &&\n        (validationOptions.allowQRIBAN || !isQRIBAN(iban)));\n}\n/**\n * IBAM validation errors\n */\nexport var ValidationErrorsIBAN;\n(function (ValidationErrorsIBAN) {\n    ValidationErrorsIBAN[ValidationErrorsIBAN[\"NoIBANProvided\"] = 0] = \"NoIBANProvided\";\n    ValidationErrorsIBAN[ValidationErrorsIBAN[\"NoIBANCountry\"] = 1] = \"NoIBANCountry\";\n    ValidationErrorsIBAN[ValidationErrorsIBAN[\"WrongBBANLength\"] = 2] = \"WrongBBANLength\";\n    ValidationErrorsIBAN[ValidationErrorsIBAN[\"WrongBBANFormat\"] = 3] = \"WrongBBANFormat\";\n    ValidationErrorsIBAN[ValidationErrorsIBAN[\"ChecksumNotNumber\"] = 4] = \"ChecksumNotNumber\";\n    ValidationErrorsIBAN[ValidationErrorsIBAN[\"WrongIBANChecksum\"] = 5] = \"WrongIBANChecksum\";\n    ValidationErrorsIBAN[ValidationErrorsIBAN[\"WrongAccountBankBranchChecksum\"] = 6] = \"WrongAccountBankBranchChecksum\";\n    ValidationErrorsIBAN[ValidationErrorsIBAN[\"QRIBANNotAllowed\"] = 7] = \"QRIBANNotAllowed\";\n})(ValidationErrorsIBAN || (ValidationErrorsIBAN = {}));\n/**\n * validateIBAN\n * ```\n * // returns {errorCodes: [], valid: true}\n * ibantools.validateIBAN(\"NL91ABNA0417164300\");\n * ```\n * ```\n * ```\n * // returns {errorCodes: [], valid: true}\n * ibantools.validateIBAN('CH4431999123000889012');\n * ```\n * ```\n * // returns {errorCodes: [7], valid: false}\n * ibantools.validateIBAN('CH4431999123000889012', { allowQRIBAN: false });\n * ```\n */\nexport function validateIBAN(iban, validationOptions) {\n    if (validationOptions === void 0) { validationOptions = { allowQRIBAN: true }; }\n    var result = { errorCodes: [], valid: true };\n    if (iban !== undefined && iban !== null && iban !== '') {\n        var spec = countrySpecs[iban.slice(0, 2)];\n        if (!spec || !(spec.bban_regexp || spec.chars)) {\n            result.valid = false;\n            result.errorCodes.push(ValidationErrorsIBAN.NoIBANCountry);\n            return result;\n        }\n        if (spec && spec.chars && spec.chars !== iban.length) {\n            result.valid = false;\n            result.errorCodes.push(ValidationErrorsIBAN.WrongBBANLength);\n        }\n        if (spec && spec.bban_regexp && !checkFormatBBAN(iban.slice(4), spec.bban_regexp)) {\n            result.valid = false;\n            result.errorCodes.push(ValidationErrorsIBAN.WrongBBANFormat);\n        }\n        if (spec && spec.bban_validation_func && !spec.bban_validation_func(iban.slice(4))) {\n            result.valid = false;\n            result.errorCodes.push(ValidationErrorsIBAN.WrongAccountBankBranchChecksum);\n        }\n        var reg = new RegExp('^[0-9]{2}$', '');\n        if (!reg.test(iban.slice(2, 4))) {\n            result.valid = false;\n            result.errorCodes.push(ValidationErrorsIBAN.ChecksumNotNumber);\n        }\n        if (result.errorCodes.indexOf(ValidationErrorsIBAN.WrongBBANFormat) !== -1 || !isValidIBANChecksum(iban)) {\n            result.valid = false;\n            result.errorCodes.push(ValidationErrorsIBAN.WrongIBANChecksum);\n        }\n        if (!validationOptions.allowQRIBAN && isQRIBAN(iban)) {\n            result.valid = false;\n            result.errorCodes.push(ValidationErrorsIBAN.QRIBANNotAllowed);\n        }\n    }\n    else {\n        result.valid = false;\n        result.errorCodes.push(ValidationErrorsIBAN.NoIBANProvided);\n    }\n    return result;\n}\n/**\n * Validate BBAN\n *\n * ```\n * // returns true\n * ibantools.isValidBBAN(\"ABNA0417164300\", \"NL\");\n * ```\n * ```\n * // returns false\n * ibantools.isValidBBAN(\"A7NA0517164300\", \"NL\");\n * ```\n */\nexport function isValidBBAN(bban, countryCode) {\n    if (bban === undefined || bban === null || countryCode === undefined || countryCode === null)\n        return false;\n    var spec = countrySpecs[countryCode];\n    if (spec === undefined ||\n        spec === null ||\n        spec.bban_regexp === undefined ||\n        spec.bban_regexp === null ||\n        spec.chars === undefined ||\n        spec.chars === null)\n        return false;\n    if (spec.chars - 4 === bban.length && checkFormatBBAN(bban, spec.bban_regexp)) {\n        if (spec.bban_validation_func) {\n            return spec.bban_validation_func(bban.replace(/[\\s.]+/g, ''));\n        }\n        return true;\n    }\n    return false;\n}\n/**\n * Validate if country code is from a SEPA country\n * ```\n * // returns true\n * ibantools.isSEPACountry(\"NL\");\n * ```\n * ```\n * // returns false\n * ibantools.isSEPACountry(\"PK\");\n * ```\n */\nexport function isSEPACountry(countryCode) {\n    if (countryCode !== undefined && countryCode !== null) {\n        var spec = countrySpecs[countryCode];\n        if (spec !== undefined) {\n            return spec.SEPA ? spec.SEPA : false;\n        }\n    }\n    return false;\n}\n/**\n * Check if IBAN is QR-IBAN\n * ```\n * // returns true\n * ibantools.isQRIBAN(\"CH4431999123000889012\");\n * ```\n * ```\n * // returns false\n * ibantools.isQRIBAN(\"NL92ABNA0517164300\");\n * ```\n */\nexport function isQRIBAN(iban) {\n    if (iban === undefined || iban === null)\n        return false;\n    var countryCode = iban.slice(0, 2);\n    var QRIBANCountries = ['LI', 'CH'];\n    if (!QRIBANCountries.includes(countryCode))\n        return false;\n    var reg = new RegExp('^3[0-1]{1}[0-9]{3}$', '');\n    return reg.test(iban.slice(4, 9));\n}\n/**\n * composeIBAN\n *\n * ```\n * // returns NL91ABNA0417164300\n * ibantools.composeIBAN({ countryCode: \"NL\", bban: \"ABNA0417164300\" });\n * ```\n */\nexport function composeIBAN(params) {\n    var formated_bban = electronicFormatIBAN(params.bban) || '';\n    if (params.countryCode === null || params.countryCode === undefined) {\n        return null;\n    }\n    var spec = countrySpecs[params.countryCode];\n    if (formated_bban !== '' &&\n        spec !== undefined &&\n        spec.chars &&\n        spec.chars !== null &&\n        spec.chars === formated_bban.length + 4 &&\n        spec.bban_regexp &&\n        spec.bban_regexp !== null &&\n        checkFormatBBAN(formated_bban, spec.bban_regexp)) {\n        var checksom = mod9710Iban(params.countryCode + '00' + formated_bban);\n        return params.countryCode + ('0' + (98 - checksom)).slice(-2) + formated_bban;\n    }\n    return null;\n}\n/**\n * extractIBAN\n * ```\n * // returns {iban: \"NL91ABNA0417164300\", bban: \"ABNA0417164300\", countryCode: \"NL\", valid: true, accountNumber: '0417164300', bankIdentifier: 'ABNA'}\n * ibantools.extractIBAN(\"NL91 ABNA 0417 1643 00\");\n * ```\n */\nexport function extractIBAN(iban) {\n    var result = {};\n    var eFormatIBAN = electronicFormatIBAN(iban);\n    result.iban = eFormatIBAN || iban;\n    if (!!eFormatIBAN && isValidIBAN(eFormatIBAN)) {\n        result.bban = eFormatIBAN.slice(4);\n        result.countryCode = eFormatIBAN.slice(0, 2);\n        result.valid = true;\n        var spec = countrySpecs[result.countryCode];\n        if (spec.account_indentifier) {\n            var ac = spec.account_indentifier.split('-');\n            var starting = parseInt(ac[0]);\n            var ending = parseInt(ac[1]);\n            result.accountNumber = result.iban.slice(starting, ending + 1);\n        }\n        if (spec.bank_identifier) {\n            var ac = spec.bank_identifier.split('-');\n            var starting = parseInt(ac[0]);\n            var ending = parseInt(ac[1]);\n            result.bankIdentifier = result.bban.slice(starting, ending + 1);\n        }\n        if (spec.branch_indentifier) {\n            var ac = spec.branch_indentifier.split('-');\n            var starting = parseInt(ac[0]);\n            var ending = parseInt(ac[1]);\n            result.branchIdentifier = result.bban.slice(starting, ending + 1);\n        }\n    }\n    else {\n        result.valid = false;\n    }\n    return result;\n}\n/**\n * Check BBAN format\n *\n * @ignore\n */\nfunction checkFormatBBAN(bban, bformat) {\n    var reg = new RegExp(bformat, '');\n    return reg.test(bban);\n}\n/**\n * Get IBAN in electronic format (no spaces)\n * IBAN validation is not performed.\n * When non-string value for IBAN is provided, returns null.\n * ```\n * // returns \"NL91ABNA0417164300\"\n * ibantools.electronicFormatIBAN(\"NL91 ABNA 0417 1643 00\");\n * ```\n */\nexport function electronicFormatIBAN(iban) {\n    if (typeof iban !== 'string') {\n        return null;\n    }\n    return iban.replace(/[-\\ ]/g, '').toUpperCase();\n}\n/**\n * Get IBAN in friendly format (separated after every 4 characters)\n * IBAN validation is not performed.\n * When non-string value for IBAN is provided, returns null.\n * ```\n * // returns \"NL91 ABNA 0417 1643 00\"\n * ibantools.friendlyFormatIBAN(\"NL91ABNA0417164300\");\n * ```\n * ```\n * // returns \"NL91-ABNA-0417-1643-00\"\n * ibantools.friendlyFormatIBAN(\"NL91ABNA0417164300\",\"-\");\n * ```\n */\nexport function friendlyFormatIBAN(iban, separator) {\n    if (typeof iban !== 'string') {\n        return null;\n    }\n    if (separator === undefined || separator === null) {\n        separator = ' ';\n    }\n    var electronic_iban = electronicFormatIBAN(iban);\n    /* istanbul ignore if */\n    if (electronic_iban === null) {\n        return null;\n    }\n    return electronic_iban.replace(/(.{4})(?!$)/g, '$1' + separator);\n}\n/**\n * Calculate checksum of IBAN and compares it with checksum provided in IBAN Registry\n *\n * @ignore\n */\nfunction isValidIBANChecksum(iban) {\n    var countryCode = iban.slice(0, 2);\n    var providedChecksum = parseInt(iban.slice(2, 4), 10);\n    var bban = iban.slice(4);\n    // Wikipedia[validating_iban] says there are a specif way to check if a IBAN is valid but\n    // it. It says 'If the remainder is 1, the check digit test is passed and the\n    // IBAN might be valid.'. might, MIGHT!\n    // We don't want might but want yes or no. Since every BBAN is IBAN from the fifth\n    // (slice(4)) we can generate the IBAN from BBAN and country code(two first characters)\n    // from in the IBAN.\n    // To generate the (generate the iban check digits)[generating-iban-check]\n    //   Move the country code to the end\n    //   remove the checksum from the begging\n    //   Add \"00\" to the end\n    //   modulo 97 on the amount\n    //   subtract remainder from 98, (98 - remainder)\n    //   Add a leading 0 if the remainder is less then 10 (padStart(2, \"0\")) (we skip this\n    //     since we compare int, not string)\n    //\n    // [validating_iban][https://en.wikipedia.org/wiki/International_Bank_Account_Number#Validating_the_IBAN]\n    // [generating-iban-check][https://en.wikipedia.org/wiki/International_Bank_Account_Number#Generating_IBAN_check_digits]\n    var validationString = replaceCharaterWithCode(\"\".concat(bban).concat(countryCode, \"00\"));\n    var rest = mod9710(validationString);\n    return 98 - rest === providedChecksum;\n}\n/**\n * Iban contain characters and should be converted to intereger by 55 substracted\n * from there ascii value\n *\n * @ignore\n */\nfunction replaceCharaterWithCode(str) {\n    // It is slower but alot more readable\n    // https://jsbench.me/ttkzgsekae/1\n    return str\n        .split('')\n        .map(function (c) {\n        var code = c.charCodeAt(0);\n        return code >= 65 ? (code - 55).toString() : c;\n    })\n        .join('');\n}\n/**\n * MOD-97-10\n *\n * @ignore\n */\nfunction mod9710Iban(iban) {\n    return mod9710(replaceCharaterWithCode(iban.slice(4) + iban.slice(0, 4)));\n}\n/**\n * Returns specifications for all countries, even those who are not\n * members of IBAN registry. `IBANRegistry` field indicates if country\n * is member of not.\n *\n * ```\n * // Validating IBAN form field after user selects his country\n * // <select id=\"countries\">\n * //   ...\n * //   <option value=\"NL\">Netherlands</option>\n * //   ...\n * // </select>\n * $(\"#countries\").select(function() {\n *   // Find country\n *   let country = ibantools.getCountrySpecifications()[$(this).val()];\n *   // Add country code letters to IBAN form field\n *   $(\"input#iban\").value($(this).val());\n *   // Add New value to \"pattern\" attribute to #iban input text field\n *   $(\"input#iban\").attr(\"pattern\", $(this).val() + \"[0-9]{2}\" + country.bban_regexp.slice(1).replace(\"$\",\"\"));\n * });\n * ```\n */\nexport function getCountrySpecifications() {\n    var countyMap = {};\n    for (var countyCode in countrySpecs) {\n        var county = countrySpecs[countyCode];\n        countyMap[countyCode] = {\n            chars: county.chars || null,\n            bban_regexp: county.bban_regexp || null,\n            IBANRegistry: county.IBANRegistry || false,\n            SEPA: county.SEPA || false,\n        };\n    }\n    return countyMap;\n}\n/**\n * Validate BIC/SWIFT\n *\n * ```\n * // returns true\n * ibantools.isValidBIC(\"ABNANL2A\");\n *\n * // returns true\n * ibantools.isValidBIC(\"NEDSZAJJXXX\");\n *\n * // returns false\n * ibantools.isValidBIC(\"ABN4NL2A\");\n *\n * // returns false\n * ibantools.isValidBIC(\"ABNA NL 2A\");\n * ```\n */\nexport function isValidBIC(bic) {\n    if (!bic) {\n        return false;\n    }\n    var reg = new RegExp('^[a-zA-Z]{6}[a-zA-Z0-9]{2}([a-zA-Z0-9]{3})?$', '');\n    var spec = countrySpecs[bic.toUpperCase().slice(4, 6)];\n    return reg.test(bic) && spec !== undefined;\n}\n/**\n * BIC validation errors\n */\nexport var ValidationErrorsBIC;\n(function (ValidationErrorsBIC) {\n    ValidationErrorsBIC[ValidationErrorsBIC[\"NoBICProvided\"] = 0] = \"NoBICProvided\";\n    ValidationErrorsBIC[ValidationErrorsBIC[\"NoBICCountry\"] = 1] = \"NoBICCountry\";\n    ValidationErrorsBIC[ValidationErrorsBIC[\"WrongBICFormat\"] = 2] = \"WrongBICFormat\";\n})(ValidationErrorsBIC || (ValidationErrorsBIC = {}));\n/**\n * validateBIC\n * ```\n * // returns {errorCodes: [], valid: true}\n * ibantools.validateBIC(\"NEDSZAJJXXX\");\n * ```\n */\nexport function validateBIC(bic) {\n    var result = { errorCodes: [], valid: true };\n    if (bic !== undefined && bic !== null && bic !== '') {\n        var spec = countrySpecs[bic.toUpperCase().slice(4, 6)];\n        if (spec === undefined) {\n            result.valid = false;\n            result.errorCodes.push(ValidationErrorsBIC.NoBICCountry);\n        }\n        else {\n            var reg = new RegExp('^[a-zA-Z]{6}[a-zA-Z0-9]{2}([a-zA-Z0-9]{3})?$', '');\n            if (!reg.test(bic)) {\n                result.valid = false;\n                result.errorCodes.push(ValidationErrorsBIC.WrongBICFormat);\n            }\n        }\n    }\n    else {\n        result.valid = false;\n        result.errorCodes.push(ValidationErrorsBIC.NoBICProvided);\n    }\n    return result;\n}\n/**\n * extractBIC\n * ```\n * // returns {bankCode: \"ABNA\", countryCode: \"NL\", locationCode: \"2A\", branchCode: null, testBIC: false, valid: true}\n * ibantools.extractBIC(\"ABNANL2A\");\n * ```\n */\nexport function extractBIC(inputBic) {\n    var result = {};\n    var bic = inputBic.toUpperCase();\n    if (isValidBIC(bic)) {\n        result.bankCode = bic.slice(0, 4);\n        result.countryCode = bic.slice(4, 6);\n        result.locationCode = bic.slice(6, 8);\n        result.testBIC = result.locationCode[1] === '0' ? true : false;\n        result.branchCode = bic.length > 8 ? bic.slice(8) : null;\n        result.valid = true;\n    }\n    else {\n        result.valid = false;\n    }\n    return result;\n}\n/**\n * Used for Norway BBAN check\n *\n * @ignore\n */\nvar checkNorwayBBAN = function (bban) {\n    var weights = [5, 4, 3, 2, 7, 6, 5, 4, 3, 2];\n    var bbanWithoutSpacesAndPeriods = bban.replace(/[\\s.]+/g, '');\n    var controlDigit = parseInt(bbanWithoutSpacesAndPeriods.charAt(10), 10);\n    var bbanWithoutControlDigit = bbanWithoutSpacesAndPeriods.substring(0, 10);\n    var sum = 0;\n    for (var index = 0; index < 10; index++) {\n        sum += parseInt(bbanWithoutControlDigit.charAt(index), 10) * weights[index];\n    }\n    var remainder = sum % 11;\n    return controlDigit === (remainder === 0 ? 0 : 11 - remainder);\n};\n/**\n * Used for Belgian BBAN check\n *\n * @ignore\n */\nvar checkBelgianBBAN = function (bban) {\n    var stripped = bban.replace(/[\\s.]+/g, '');\n    var checkingPart = parseInt(stripped.substring(0, stripped.length - 2), 10);\n    var checksum = parseInt(stripped.substring(stripped.length - 2, stripped.length), 10);\n    var remainder = checkingPart % 97 === 0 ? 97 : checkingPart % 97;\n    return remainder === checksum;\n};\n/**\n * Mod 97/10 calculation\n *\n * @ignore\n */\nvar mod9710 = function (validationString) {\n    while (validationString.length > 2) {\n        // > Any computer programming language or software package that is used to compute D\n        // > mod 97 directly must have the ability to handle integers of more than 30 digits.\n        // > In practice, this can only be done by software that either supports\n        // > arbitrary-precision arithmetic or that can handle 219-bit (unsigned) integers\n        // https://en.wikipedia.org/wiki/International_Bank_Account_Number#Modulo_operation_on_IBAN\n        var part = validationString.slice(0, 6);\n        var partInt = parseInt(part, 10);\n        if (isNaN(partInt)) {\n            return NaN;\n        }\n        validationString = (partInt % 97) + validationString.slice(part.length);\n    }\n    return parseInt(validationString, 10) % 97;\n};\n/**\n * Check BBAN based on Mod97/10 calculation for countries that support it:\n * BA, ME, MK, PT, RS, SI\n *\n * @ignore\n */\nvar checkMod9710BBAN = function (bban) {\n    var stripped = bban.replace(/[\\s.]+/g, '');\n    var reminder = mod9710(stripped);\n    return reminder === 1;\n};\n/**\n * Used for Poland BBAN check\n *\n * @ignore\n */\nvar checkPolandBBAN = function (bban) {\n    var weights = [3, 9, 7, 1, 3, 9, 7];\n    var controlDigit = parseInt(bban.charAt(7), 10);\n    var toCheck = bban.substring(0, 7);\n    var sum = 0;\n    for (var index = 0; index < 7; index++) {\n        sum += parseInt(toCheck.charAt(index), 10) * weights[index];\n    }\n    var remainder = sum % 10;\n    return controlDigit === (remainder === 0 ? 0 : 10 - remainder);\n};\n/**\n * Spain (ES) BBAN check\n *\n * @ignore\n */\nvar checkSpainBBAN = function (bban) {\n    var weightsBankBranch = [4, 8, 5, 10, 9, 7, 3, 6];\n    var weightsAccount = [1, 2, 4, 8, 5, 10, 9, 7, 3, 6];\n    var controlBankBranch = parseInt(bban.charAt(8), 10);\n    var controlAccount = parseInt(bban.charAt(9), 10);\n    var bankBranch = bban.substring(0, 8);\n    var account = bban.substring(10, 20);\n    var sum = 0;\n    for (var index = 0; index < 8; index++) {\n        sum += parseInt(bankBranch.charAt(index), 10) * weightsBankBranch[index];\n    }\n    var remainder = sum % 11;\n    if (controlBankBranch !== (remainder === 0 ? 0 : remainder === 1 ? 1 : 11 - remainder)) {\n        return false;\n    }\n    sum = 0;\n    for (var index = 0; index < 10; index++) {\n        sum += parseInt(account.charAt(index), 10) * weightsAccount[index];\n    }\n    remainder = sum % 11;\n    return controlAccount === (remainder === 0 ? 0 : remainder === 1 ? 1 : 11 - remainder);\n};\n/**\n * Mod 11/10 check\n *\n * @ignore\n */\nvar checkMod1110 = function (toCheck, control) {\n    var nr = 10;\n    for (var index = 0; index < toCheck.length; index++) {\n        nr += parseInt(toCheck.charAt(index), 10);\n        if (nr % 10 !== 0) {\n            nr = nr % 10;\n        }\n        nr = nr * 2;\n        nr = nr % 11;\n    }\n    return control === (11 - nr === 10 ? 0 : 11 - nr);\n};\n/**\n * Croatian (HR) BBAN check\n *\n * @ignore\n */\nvar checkCroatianBBAN = function (bban) {\n    var controlBankBranch = parseInt(bban.charAt(6), 10);\n    var controlAccount = parseInt(bban.charAt(16), 10);\n    var bankBranch = bban.substring(0, 6);\n    var account = bban.substring(7, 16);\n    return checkMod1110(bankBranch, controlBankBranch) && checkMod1110(account, controlAccount);\n};\n/**\n * Czech (CZ) and Slowak (SK) BBAN check\n *\n * @ignore\n */\nvar checkCzechAndSlovakBBAN = function (bban) {\n    var weightsPrefix = [10, 5, 8, 4, 2, 1];\n    var weightsSuffix = [6, 3, 7, 9, 10, 5, 8, 4, 2, 1];\n    var controlPrefix = parseInt(bban.charAt(9), 10);\n    var controlSuffix = parseInt(bban.charAt(19), 10);\n    var prefix = bban.substring(4, 9);\n    var suffix = bban.substring(10, 19);\n    var sum = 0;\n    for (var index = 0; index < prefix.length; index++) {\n        sum += parseInt(prefix.charAt(index), 10) * weightsPrefix[index];\n    }\n    var remainder = sum % 11;\n    if (controlPrefix !== (remainder === 0 ? 0 : remainder === 1 ? 1 : 11 - remainder)) {\n        return false;\n    }\n    sum = 0;\n    for (var index = 0; index < suffix.length; index++) {\n        sum += parseInt(suffix.charAt(index), 10) * weightsSuffix[index];\n    }\n    remainder = sum % 11;\n    return controlSuffix === (remainder === 0 ? 0 : remainder === 1 ? 1 : 11 - remainder);\n};\n/**\n * Estonian (EE) BBAN check\n *\n * @ignore\n */\nvar checkEstonianBBAN = function (bban) {\n    var weights = [7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7];\n    var controlDigit = parseInt(bban.charAt(15), 10);\n    var toCheck = bban.substring(2, 15);\n    var sum = 0;\n    for (var index = 0; index < toCheck.length; index++) {\n        sum += parseInt(toCheck.charAt(index), 10) * weights[index];\n    }\n    var remainder = sum % 10;\n    return controlDigit === (remainder === 0 ? 0 : 10 - remainder);\n};\n/**\n * Check French (FR) BBAN\n * Also for Monaco (MC)\n *\n * @ignore\n */\nvar checkFrenchBBAN = function (bban) {\n    var stripped = bban.replace(/[\\s.]+/g, '');\n    var normalized = Array.from(stripped);\n    for (var index = 0; index < stripped.length; index++) {\n        var c = normalized[index].charCodeAt(0);\n        if (c >= 65) {\n            switch (c) {\n                case 65:\n                case 74:\n                    normalized[index] = '1';\n                    break;\n                case 66:\n                case 75:\n                case 83:\n                    normalized[index] = '2';\n                    break;\n                case 67:\n                case 76:\n                case 84:\n                    normalized[index] = '3';\n                    break;\n                case 68:\n                case 77:\n                case 85:\n                    normalized[index] = '4';\n                    break;\n                case 69:\n                case 78:\n                case 86:\n                    normalized[index] = '5';\n                    break;\n                case 70:\n                case 79:\n                case 87:\n                    normalized[index] = '6';\n                    break;\n                case 71:\n                case 80:\n                case 88:\n                    normalized[index] = '7';\n                    break;\n                case 72:\n                case 81:\n                case 89:\n                    normalized[index] = '8';\n                    break;\n                case 73:\n                case 82:\n                case 90:\n                    normalized[index] = '9';\n                    break;\n            }\n        }\n    }\n    var remainder = mod9710(normalized.join(''));\n    return remainder === 0;\n};\n/**\n * Hungarian (HU) BBAN check\n *\n * @ignore\n */\nvar checkHungarianBBAN = function (bban) {\n    var weights = [9, 7, 3, 1, 9, 7, 3, 1, 9, 7, 3, 1, 9, 7, 3];\n    var controlDigitBankBranch = parseInt(bban.charAt(7), 10);\n    var toCheckBankBranch = bban.substring(0, 7);\n    var sum = 0;\n    for (var index = 0; index < toCheckBankBranch.length; index++) {\n        sum += parseInt(toCheckBankBranch.charAt(index), 10) * weights[index];\n    }\n    var remainder = sum % 10;\n    if (controlDigitBankBranch !== (remainder === 0 ? 0 : 10 - remainder)) {\n        return false;\n    }\n    sum = 0;\n    if (bban.endsWith('00000000')) {\n        var toCheckAccount = bban.substring(8, 15);\n        var controlDigitAccount = parseInt(bban.charAt(15), 10);\n        for (var index = 0; index < toCheckAccount.length; index++) {\n            sum += parseInt(toCheckAccount.charAt(index), 10) * weights[index];\n        }\n        var remainder_1 = sum % 10;\n        return controlDigitAccount === (remainder_1 === 0 ? 0 : 10 - remainder_1);\n    }\n    else {\n        var toCheckAccount = bban.substring(8, 23);\n        var controlDigitAccount = parseInt(bban.charAt(23), 10);\n        for (var index = 0; index < toCheckAccount.length; index++) {\n            sum += parseInt(toCheckAccount.charAt(index), 10) * weights[index];\n        }\n        var remainder_2 = sum % 10;\n        return controlDigitAccount === (remainder_2 === 0 ? 0 : 10 - remainder_2);\n    }\n};\n/**\n * Set custom BBAN validation function for country.\n *\n * If `bban_validation_func` already exists for the corresponding country,\n * it will be overwritten.\n */\nexport var setCountryBBANValidation = function (country, func) {\n    if (typeof countrySpecs[country] === 'undefined') {\n        return false;\n    }\n    countrySpecs[country].bban_validation_func = func;\n    return true;\n};\n/**\n * Country specifications\n */\nexport var countrySpecs = {\n    AD: {\n        chars: 24,\n        bban_regexp: '^[0-9]{8}[A-Z0-9]{12}$',\n        IBANRegistry: true,\n        SEPA: true,\n        branch_indentifier: '4-7',\n        bank_identifier: '0-3',\n        account_indentifier: '8-24',\n    },\n    AE: {\n        chars: 23,\n        bban_regexp: '^[0-9]{3}[0-9]{16}$',\n        IBANRegistry: true,\n        bank_identifier: '0-2',\n        account_indentifier: '7-23',\n    },\n    AF: {},\n    AG: {},\n    AI: {},\n    AL: {\n        chars: 28,\n        bban_regexp: '^[0-9]{8}[A-Z0-9]{16}$',\n        IBANRegistry: true,\n        branch_indentifier: '3-7',\n        bank_identifier: '0-2',\n        account_indentifier: '12-28',\n    },\n    AM: {},\n    AO: {\n        chars: 25,\n        bban_regexp: '^[0-9]{21}$',\n    },\n    AQ: {},\n    AR: {},\n    AS: {},\n    AT: { chars: 20, bban_regexp: '^[0-9]{16}$', IBANRegistry: true, SEPA: true, bank_identifier: '0-4' },\n    AU: {},\n    AW: {},\n    AX: {\n        chars: 18,\n        bban_regexp: '^[0-9]{14}$',\n        IBANRegistry: true,\n    },\n    AZ: {\n        chars: 28,\n        bban_regexp: '^[A-Z]{4}[A-Z0-9]{20}$',\n        IBANRegistry: true,\n        bank_identifier: '0-3',\n        account_indentifier: '4-28',\n    },\n    BA: {\n        chars: 20,\n        bban_regexp: '^[0-9]{16}$',\n        bban_validation_func: checkMod9710BBAN,\n        IBANRegistry: true,\n        branch_indentifier: '3-5',\n        bank_identifier: '0-2',\n    },\n    BB: {},\n    BD: {},\n    BE: {\n        chars: 16,\n        bban_regexp: '^[0-9]{12}$',\n        bban_validation_func: checkBelgianBBAN,\n        IBANRegistry: true,\n        SEPA: true,\n        bank_identifier: '0-2',\n        account_indentifier: '0-16',\n    },\n    BF: {\n        chars: 28,\n        bban_regexp: '^[A-Z0-9]{2}[0-9]{22}$',\n    },\n    BG: {\n        chars: 22,\n        bban_regexp: '^[A-Z]{4}[0-9]{6}[A-Z0-9]{8}$',\n        IBANRegistry: true,\n        SEPA: true,\n        branch_indentifier: '4-7',\n        bank_identifier: '0-3',\n    },\n    BH: {\n        chars: 22,\n        bban_regexp: '^[A-Z]{4}[A-Z0-9]{14}$',\n        IBANRegistry: true,\n        bank_identifier: '0-3',\n        account_indentifier: '8-22',\n    },\n    BI: {\n        chars: 27,\n        bban_regexp: '^[0-9]{23}$',\n        branch_indentifier: '5-9',\n        bank_identifier: '0-4',\n        account_indentifier: '14-27',\n    },\n    BJ: {\n        chars: 28,\n        bban_regexp: '^[A-Z0-9]{2}[0-9]{22}$',\n    },\n    BL: {\n        chars: 27,\n        bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n    },\n    BM: {},\n    BN: {},\n    BO: {},\n    BQ: {},\n    BR: {\n        chars: 29,\n        bban_regexp: '^[0-9]{23}[A-Z]{1}[A-Z0-9]{1}$',\n        IBANRegistry: true,\n        branch_indentifier: '8-12',\n        bank_identifier: '0-7',\n        account_indentifier: '17-29',\n    },\n    BS: {},\n    BT: {},\n    BV: {},\n    BW: {},\n    BY: {\n        chars: 28,\n        bban_regexp: '^[A-Z]{4}[0-9]{4}[A-Z0-9]{16}$',\n        IBANRegistry: true,\n        bank_identifier: '0-3',\n    },\n    BZ: {},\n    CA: {},\n    CC: {},\n    CD: {},\n    CF: {\n        chars: 27,\n        bban_regexp: '^[0-9]{23}$',\n    },\n    CG: {\n        chars: 27,\n        bban_regexp: '^[0-9]{23}$',\n    },\n    CH: {\n        chars: 21,\n        bban_regexp: '^[0-9]{5}[A-Z0-9]{12}$',\n        IBANRegistry: true,\n        SEPA: true,\n        bank_identifier: '0-4',\n    },\n    CI: {\n        chars: 28,\n        bban_regexp: '^[A-Z]{1}[0-9]{23}$',\n    },\n    CK: {},\n    CL: {},\n    CM: {\n        chars: 27,\n        bban_regexp: '^[0-9]{23}$',\n    },\n    CN: {},\n    CO: {},\n    CR: {\n        chars: 22,\n        bban_regexp: '^[0-9]{18}$',\n        IBANRegistry: true,\n        bank_identifier: '0-3',\n        account_indentifier: '8-22',\n    },\n    CU: {},\n    CV: { chars: 25, bban_regexp: '^[0-9]{21}$' },\n    CW: {},\n    CX: {},\n    CY: {\n        chars: 28,\n        bban_regexp: '^[0-9]{8}[A-Z0-9]{16}$',\n        IBANRegistry: true,\n        SEPA: true,\n        branch_indentifier: '3-7',\n        bank_identifier: '0-2',\n        account_indentifier: '12-28',\n    },\n    CZ: {\n        chars: 24,\n        bban_regexp: '^[0-9]{20}$',\n        bban_validation_func: checkCzechAndSlovakBBAN,\n        IBANRegistry: true,\n        SEPA: true,\n        bank_identifier: '0-3',\n    },\n    DE: {\n        chars: 22,\n        bban_regexp: '^[0-9]{18}$',\n        IBANRegistry: true,\n        SEPA: true,\n        bank_identifier: '0-7',\n        account_indentifier: '13-22',\n    },\n    DJ: {\n        chars: 27,\n        bban_regexp: '^[0-9]{23}$',\n        branch_indentifier: '5-9',\n        bank_identifier: '0-4',\n        account_indentifier: '14-27',\n    },\n    DK: {\n        chars: 18,\n        bban_regexp: '^[0-9]{14}$',\n        IBANRegistry: true,\n        SEPA: true,\n        bank_identifier: '0-3',\n        account_indentifier: '4-18',\n    },\n    DM: {},\n    DO: {\n        chars: 28,\n        bban_regexp: '^[A-Z]{4}[0-9]{20}$',\n        IBANRegistry: true,\n        bank_identifier: '0-3',\n        account_indentifier: '8-28',\n    },\n    DZ: {\n        chars: 26,\n        bban_regexp: '^[0-9]{22}$',\n    },\n    EC: {},\n    EE: {\n        chars: 20,\n        bban_regexp: '^[0-9]{16}$',\n        bban_validation_func: checkEstonianBBAN,\n        IBANRegistry: true,\n        SEPA: true,\n        bank_identifier: '0-1',\n        account_indentifier: '8-20',\n    },\n    EG: {\n        chars: 29,\n        bban_regexp: '^[0-9]{25}',\n        IBANRegistry: true,\n        branch_indentifier: '4-7',\n        bank_identifier: '0-3',\n        account_indentifier: '17-29',\n    },\n    EH: {},\n    ER: {},\n    ES: {\n        chars: 24,\n        bban_validation_func: checkSpainBBAN,\n        bban_regexp: '^[0-9]{20}$',\n        IBANRegistry: true,\n        SEPA: true,\n        branch_indentifier: '4-7',\n        bank_identifier: '0-3',\n        account_indentifier: '14-24',\n    },\n    ET: {},\n    FI: {\n        chars: 18,\n        bban_regexp: '^[0-9]{14}$',\n        IBANRegistry: true,\n        SEPA: true,\n        bank_identifier: '0-2',\n        account_indentifier: '0-0',\n    },\n    FJ: {},\n    FK: {\n        chars: 18,\n        bban_regexp: '^[A-Z]{2}[0-9]{12}$',\n        bank_identifier: '0-1',\n        account_indentifier: '6-18',\n    },\n    FM: {},\n    FO: {\n        chars: 18,\n        bban_regexp: '^[0-9]{14}$',\n        IBANRegistry: true,\n        bank_identifier: '0-3',\n        account_indentifier: '4-18',\n    },\n    FR: {\n        chars: 27,\n        bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n        bban_validation_func: checkFrenchBBAN,\n        IBANRegistry: true,\n        SEPA: true,\n        bank_identifier: '0-4',\n        branch_indentifier: '5-9',\n        account_indentifier: '14-24',\n    },\n    GA: {\n        chars: 27,\n        bban_regexp: '^[0-9]{23}$',\n    },\n    GB: {\n        chars: 22,\n        bban_regexp: '^[A-Z]{4}[0-9]{14}$',\n        IBANRegistry: true,\n        SEPA: true,\n        branch_indentifier: '4-9',\n        bank_identifier: '0-3',\n    },\n    GD: {},\n    GE: {\n        chars: 22,\n        bban_regexp: '^[A-Z0-9]{2}[0-9]{16}$',\n        IBANRegistry: true,\n        bank_identifier: '0-1',\n        account_indentifier: '6-22',\n    },\n    GF: {\n        chars: 27,\n        bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n        IBANRegistry: true,\n    },\n    GG: {},\n    GH: {},\n    GI: {\n        chars: 23,\n        bban_regexp: '^[A-Z]{4}[A-Z0-9]{15}$',\n        IBANRegistry: true,\n        SEPA: true,\n        bank_identifier: '0-3',\n        account_indentifier: '8-23',\n    },\n    GL: {\n        chars: 18,\n        bban_regexp: '^[0-9]{14}$',\n        IBANRegistry: true,\n        bank_identifier: '0-3',\n        account_indentifier: '4-18',\n    },\n    GM: {},\n    GN: {},\n    GP: {\n        chars: 27,\n        bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n        IBANRegistry: true,\n    },\n    GQ: {\n        chars: 27,\n        bban_regexp: '^[0-9]{23}$',\n    },\n    GR: {\n        chars: 27,\n        bban_regexp: '^[0-9]{7}[A-Z0-9]{16}$',\n        IBANRegistry: true,\n        SEPA: true,\n        branch_indentifier: '3-6',\n        bank_identifier: '0-2',\n        account_indentifier: '7-27',\n    },\n    GS: {},\n    GT: {\n        chars: 28,\n        bban_regexp: '^[A-Z0-9]{24}$',\n        IBANRegistry: true,\n        bank_identifier: '0-3',\n        account_indentifier: '8-28',\n    },\n    GU: {},\n    GW: {\n        chars: 25,\n        bban_regexp: '^[A-Z]{2}[0-9]{19}$',\n    },\n    GY: {},\n    HK: {},\n    HM: {},\n    HN: {\n        chars: 28,\n        bban_regexp: '^[A-Z]{4}[0-9]{20}$',\n    },\n    HR: {\n        chars: 21,\n        bban_regexp: '^[0-9]{17}$',\n        bban_validation_func: checkCroatianBBAN,\n        IBANRegistry: true,\n        SEPA: true,\n        bank_identifier: '0-6',\n    },\n    HT: {},\n    HU: {\n        chars: 28,\n        bban_regexp: '^[0-9]{24}$',\n        bban_validation_func: checkHungarianBBAN,\n        IBANRegistry: true,\n        SEPA: true,\n        branch_indentifier: '3-6',\n        bank_identifier: '0-2',\n    },\n    ID: {},\n    IE: {\n        chars: 22,\n        bban_regexp: '^[A-Z0-9]{4}[0-9]{14}$',\n        IBANRegistry: true,\n        SEPA: true,\n        branch_indentifier: '4-9',\n        bank_identifier: '0-3',\n    },\n    IL: {\n        chars: 23,\n        bban_regexp: '^[0-9]{19}$',\n        IBANRegistry: true,\n        branch_indentifier: '3-5',\n        bank_identifier: '0-2',\n    },\n    IM: {},\n    IN: {},\n    IO: {},\n    IQ: {\n        chars: 23,\n        bban_regexp: '^[A-Z]{4}[0-9]{15}$',\n        IBANRegistry: true,\n        branch_indentifier: '4-6',\n        bank_identifier: '0-3',\n        account_indentifier: '11-23',\n    },\n    IR: {\n        chars: 26,\n        bban_regexp: '^[0-9]{22}$',\n    },\n    IS: {\n        chars: 26,\n        bban_regexp: '^[0-9]{22}$',\n        IBANRegistry: true,\n        SEPA: true,\n        branch_indentifier: '2-3',\n        bank_identifier: '0-1',\n    },\n    IT: {\n        chars: 27,\n        bban_regexp: '^[A-Z]{1}[0-9]{10}[A-Z0-9]{12}$',\n        IBANRegistry: true,\n        SEPA: true,\n        branch_indentifier: '6-10',\n        bank_identifier: '1-5',\n        account_indentifier: '4-27',\n    },\n    JE: {},\n    JM: {},\n    JO: {\n        chars: 30,\n        bban_regexp: '^[A-Z]{4}[0-9]{4}[A-Z0-9]{18}$',\n        IBANRegistry: true,\n        branch_indentifier: '4-7',\n        bank_identifier: '4-7',\n    },\n    JP: {},\n    KE: {},\n    KG: {},\n    KH: {},\n    KI: {},\n    KM: {\n        chars: 27,\n        bban_regexp: '^[0-9]{23}$',\n    },\n    KN: {},\n    KP: {},\n    KR: {},\n    KW: {\n        chars: 30,\n        bban_regexp: '^[A-Z]{4}[A-Z0-9]{22}$',\n        IBANRegistry: true,\n        bank_identifier: '0-3',\n        account_indentifier: '20-30',\n    },\n    KY: {},\n    KZ: {\n        chars: 20,\n        bban_regexp: '^[0-9]{3}[A-Z0-9]{13}$',\n        IBANRegistry: true,\n        bank_identifier: '0-2',\n        account_indentifier: '0-20',\n    },\n    LA: {},\n    LB: {\n        chars: 28,\n        bban_regexp: '^[0-9]{4}[A-Z0-9]{20}$',\n        IBANRegistry: true,\n        bank_identifier: '0-3',\n        account_indentifier: '14-28',\n    },\n    LC: {\n        chars: 32,\n        bban_regexp: '^[A-Z]{4}[A-Z0-9]{24}$',\n        IBANRegistry: true,\n        bank_identifier: '0-3',\n        account_indentifier: '8-32',\n    },\n    LI: {\n        chars: 21,\n        bban_regexp: '^[0-9]{5}[A-Z0-9]{12}$',\n        IBANRegistry: true,\n        SEPA: true,\n        bank_identifier: '0-4',\n    },\n    LK: {},\n    LR: {},\n    LS: {},\n    LT: { chars: 20, bban_regexp: '^[0-9]{16}$', IBANRegistry: true, SEPA: true, bank_identifier: '0-4' },\n    LU: {\n        chars: 20,\n        bban_regexp: '^[0-9]{3}[A-Z0-9]{13}$',\n        IBANRegistry: true,\n        SEPA: true,\n        bank_identifier: '0-2',\n    },\n    LV: {\n        chars: 21,\n        bban_regexp: '^[A-Z]{4}[A-Z0-9]{13}$',\n        IBANRegistry: true,\n        SEPA: true,\n        bank_identifier: '0-3',\n        account_indentifier: '0-21',\n    },\n    LY: {\n        chars: 25,\n        bban_regexp: '^[0-9]{21}$',\n        IBANRegistry: true,\n        branch_indentifier: '3-5',\n        bank_identifier: '0-2',\n        account_indentifier: '10-25',\n    },\n    MA: {\n        chars: 28,\n        bban_regexp: '^[0-9]{24}$',\n    },\n    MC: {\n        chars: 27,\n        bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n        bban_validation_func: checkFrenchBBAN,\n        IBANRegistry: true,\n        SEPA: true,\n        branch_indentifier: '5-9',\n        bank_identifier: '0-4',\n    },\n    MD: {\n        chars: 24,\n        bban_regexp: '^[A-Z0-9]{2}[A-Z0-9]{18}$',\n        IBANRegistry: true,\n        bank_identifier: '0-1',\n        account_indentifier: '6-24',\n    },\n    ME: {\n        chars: 22,\n        bban_regexp: '^[0-9]{18}$',\n        bban_validation_func: checkMod9710BBAN,\n        IBANRegistry: true,\n        bank_identifier: '0-2',\n        account_indentifier: '4-22',\n    },\n    MF: {\n        chars: 27,\n        bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n        IBANRegistry: true,\n    },\n    MG: {\n        chars: 27,\n        bban_regexp: '^[0-9]{23}$',\n    },\n    MH: {},\n    MK: {\n        chars: 19,\n        bban_regexp: '^[0-9]{3}[A-Z0-9]{10}[0-9]{2}$',\n        bban_validation_func: checkMod9710BBAN,\n        IBANRegistry: true,\n        bank_identifier: '0-2',\n    },\n    ML: {\n        chars: 28,\n        bban_regexp: '^[A-Z0-9]{2}[0-9]{22}$',\n    },\n    MM: {},\n    MN: {\n        chars: 20,\n        bban_regexp: '^[0-9]{16}$',\n        IBANRegistry: true,\n        bank_identifier: '0-3',\n        account_indentifier: '8-20',\n    },\n    MO: {},\n    MP: {},\n    MQ: {\n        chars: 27,\n        bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n        IBANRegistry: true,\n    },\n    MR: {\n        chars: 27,\n        bban_regexp: '^[0-9]{23}$',\n        IBANRegistry: true,\n        branch_indentifier: '5-9',\n        bank_identifier: '0-4',\n        account_indentifier: '4-27',\n    },\n    MS: {},\n    MT: {\n        chars: 31,\n        bban_regexp: '^[A-Z]{4}[0-9]{5}[A-Z0-9]{18}$',\n        IBANRegistry: true,\n        SEPA: true,\n        branch_indentifier: '4-8',\n        bank_identifier: '0-3',\n        account_indentifier: '15-31',\n    },\n    MU: {\n        chars: 30,\n        bban_regexp: '^[A-Z]{4}[0-9]{19}[A-Z]{3}$',\n        IBANRegistry: true,\n        branch_indentifier: '6-7',\n        bank_identifier: '0-5',\n        account_indentifier: '0-30',\n    },\n    MV: {},\n    MW: {},\n    MX: {},\n    MY: {},\n    MZ: {\n        chars: 25,\n        bban_regexp: '^[0-9]{21}$',\n    },\n    NA: {},\n    NC: {\n        chars: 27,\n        bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n        IBANRegistry: true,\n    },\n    NE: {\n        chars: 28,\n        bban_regexp: '^[A-Z]{2}[0-9]{22}$',\n    },\n    NF: {},\n    NG: {},\n    NI: {\n        chars: 28,\n        bban_regexp: '^[A-Z]{4}[0-9]{20}$',\n        bank_identifier: '0-3',\n        IBANRegistry: true,\n        account_indentifier: '8-28',\n    },\n    NL: {\n        chars: 18,\n        bban_regexp: '^[A-Z]{4}[0-9]{10}$',\n        IBANRegistry: true,\n        SEPA: true,\n        bank_identifier: '0-3',\n        account_indentifier: '8-18',\n    },\n    NO: {\n        chars: 15,\n        bban_regexp: '^[0-9]{11}$',\n        bban_validation_func: checkNorwayBBAN,\n        IBANRegistry: true,\n        SEPA: true,\n        bank_identifier: '0-3',\n        account_indentifier: '4-15',\n    },\n    NP: {},\n    NR: {},\n    NU: {},\n    NZ: {},\n    OM: {\n        chars: 23,\n        bban_regexp: '^[0-9]{3}[A-Z0-9]{16}$',\n        IBANRegistry: true,\n        SEPA: false,\n        bank_identifier: '0-2',\n    },\n    PA: {},\n    PE: {},\n    PF: {\n        chars: 27,\n        bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n        IBANRegistry: true,\n    },\n    PG: {},\n    PH: {},\n    PK: {\n        chars: 24,\n        bban_regexp: '^[A-Z0-9]{4}[0-9]{16}$',\n        IBANRegistry: true,\n        bank_identifier: '0-3',\n    },\n    PL: {\n        chars: 28,\n        bban_validation_func: checkPolandBBAN,\n        bban_regexp: '^[0-9]{24}$',\n        IBANRegistry: true,\n        SEPA: true,\n        branch_indentifier: '0-7',\n        account_indentifier: '2-28',\n    },\n    PM: {\n        chars: 27,\n        bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n        IBANRegistry: true,\n    },\n    PN: {},\n    PR: {},\n    PS: {\n        chars: 29,\n        bban_regexp: '^[A-Z0-9]{4}[0-9]{21}$',\n        IBANRegistry: true,\n        bank_identifier: '0-3',\n        account_indentifier: '17-29',\n    },\n    PT: {\n        chars: 25,\n        bban_regexp: '^[0-9]{21}$',\n        bban_validation_func: checkMod9710BBAN,\n        IBANRegistry: true,\n        SEPA: true,\n        bank_identifier: '0-3',\n    },\n    PW: {},\n    PY: {},\n    QA: {\n        chars: 29,\n        bban_regexp: '^[A-Z]{4}[A-Z0-9]{21}$',\n        IBANRegistry: true,\n        bank_identifier: '0-3',\n        account_indentifier: '8-29',\n    },\n    RE: {\n        chars: 27,\n        bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n        IBANRegistry: true,\n    },\n    RO: {\n        chars: 24,\n        bban_regexp: '^[A-Z]{4}[A-Z0-9]{16}$',\n        IBANRegistry: true,\n        SEPA: true,\n        bank_identifier: '0-3',\n        account_indentifier: '0-24',\n    },\n    RS: {\n        chars: 22,\n        bban_regexp: '^[0-9]{18}$',\n        bban_validation_func: checkMod9710BBAN,\n        IBANRegistry: true,\n        bank_identifier: '0-2',\n    },\n    RU: {\n        chars: 33,\n        bban_regexp: '^[0-9]{14}[A-Z0-9]{15}$',\n        IBANRegistry: true,\n        branch_indentifier: '9-13',\n        bank_identifier: '0-8',\n        account_indentifier: '13-33',\n    },\n    RW: {},\n    SA: {\n        chars: 24,\n        bban_regexp: '^[0-9]{2}[A-Z0-9]{18}$',\n        IBANRegistry: true,\n        bank_identifier: '0-1',\n        account_indentifier: '12-24',\n    },\n    SB: {},\n    SC: {\n        chars: 31,\n        bban_regexp: '^[A-Z]{4}[0-9]{20}[A-Z]{3}$',\n        IBANRegistry: true,\n        branch_indentifier: '6-7',\n        bank_identifier: '0-5',\n        account_indentifier: '12-28',\n    },\n    SD: {\n        chars: 18,\n        bban_regexp: '^[0-9]{14}$',\n        IBANRegistry: true,\n        bank_identifier: '0-1',\n        account_indentifier: '6-18',\n    },\n    SE: { chars: 24, bban_regexp: '^[0-9]{20}$', IBANRegistry: true, SEPA: true, bank_identifier: '0-2' },\n    SG: {},\n    SH: {},\n    SI: {\n        chars: 19,\n        bban_regexp: '^[0-9]{15}$',\n        bban_validation_func: checkMod9710BBAN,\n        IBANRegistry: true,\n        SEPA: true,\n        branch_indentifier: '2-4',\n        bank_identifier: '0-1',\n        account_indentifier: '9-16',\n    },\n    SJ: {},\n    SK: {\n        chars: 24,\n        bban_regexp: '^[0-9]{20}$',\n        bban_validation_func: checkCzechAndSlovakBBAN,\n        IBANRegistry: true,\n        SEPA: true,\n    },\n    SL: {},\n    SM: {\n        chars: 27,\n        bban_regexp: '^[A-Z]{1}[0-9]{10}[A-Z0-9]{12}$',\n        IBANRegistry: true,\n        SEPA: true,\n        branch_indentifier: '6-10',\n    },\n    SN: {\n        chars: 28,\n        bban_regexp: '^[A-Z]{2}[0-9]{22}$',\n    },\n    SO: {\n        chars: 23,\n        bban_regexp: '^[0-9]{19}$',\n        IBANRegistry: true,\n        branch_indentifier: '4-6',\n        account_indentifier: '11-23',\n    },\n    SR: {},\n    SS: {},\n    ST: {\n        chars: 25,\n        bban_regexp: '^[0-9]{21}$',\n        IBANRegistry: true,\n        branch_indentifier: '4-7',\n    },\n    SV: {\n        chars: 28,\n        bban_regexp: '^[A-Z]{4}[0-9]{20}$',\n        IBANRegistry: true,\n        account_indentifier: '8-28',\n    },\n    SX: {},\n    SY: {},\n    SZ: {},\n    TC: {},\n    TD: {\n        chars: 27,\n        bban_regexp: '^[0-9]{23}$',\n    },\n    TF: {\n        chars: 27,\n        bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n        IBANRegistry: true,\n    },\n    TG: {\n        chars: 28,\n        bban_regexp: '^[A-Z]{2}[0-9]{22}$',\n    },\n    TH: {},\n    TJ: {},\n    TK: {},\n    TL: {\n        chars: 23,\n        bban_regexp: '^[0-9]{19}$',\n        IBANRegistry: true,\n        account_indentifier: '4-23',\n    },\n    TM: {},\n    TN: {\n        chars: 24,\n        bban_regexp: '^[0-9]{20}$',\n        IBANRegistry: true,\n        branch_indentifier: '2-4',\n        account_indentifier: '4-24',\n    },\n    TO: {},\n    TR: {\n        chars: 26,\n        bban_regexp: '^[0-9]{5}[A-Z0-9]{17}$',\n        IBANRegistry: true,\n    },\n    TT: {},\n    TV: {},\n    TW: {},\n    TZ: {},\n    UA: {\n        chars: 29,\n        bban_regexp: '^[0-9]{6}[A-Z0-9]{19}$',\n        IBANRegistry: true,\n        account_indentifier: '15-29',\n    },\n    UG: {},\n    UM: {},\n    US: {},\n    UY: {},\n    UZ: {},\n    VA: {\n        chars: 22,\n        bban_regexp: '^[0-9]{18}',\n        IBANRegistry: true,\n        SEPA: true,\n        account_indentifier: '7-22',\n    },\n    VC: {},\n    VE: {},\n    VG: {\n        chars: 24,\n        bban_regexp: '^[A-Z0-9]{4}[0-9]{16}$',\n        IBANRegistry: true,\n        account_indentifier: '8-24',\n    },\n    VI: {},\n    VN: {},\n    VU: {},\n    WF: {\n        chars: 27,\n        bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n        IBANRegistry: true,\n    },\n    WS: {},\n    XK: {\n        chars: 20,\n        bban_regexp: '^[0-9]{16}$',\n        IBANRegistry: true,\n        branch_indentifier: '2-3',\n        account_indentifier: '4-20',\n    },\n    YE: {},\n    YT: {\n        chars: 27,\n        bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n        IBANRegistry: true,\n    },\n    ZA: {},\n    ZM: {},\n    ZW: {},\n};\n","const datasets: {\n  [key: string]: {\n    [key: string]: string\n  }\n} = {\n  AT: require('./at.json'),\n  BE: require('./be.json'),\n  DE: require('./de.json'),\n  ES: require('./es.json'),\n  FR: require('./fr.json'),\n  LU: require('./lu.json'),\n  NL: require('./nl.json'),\n};\n\nexport default datasets\n","import * as ibantools from 'ibantools';\nimport datasets from '../datasets';\n\nexport const ibanIsValid = (iban: string) => { \n  \n  const ib = ibantools.electronicFormatIBAN(iban);\n  if (!ib) return false;\n  return ibantools.isValidIBAN(ib);\n}\n\nexport const ibanToBic = (iban: string) => {\n  const ib = ibantools.electronicFormatIBAN(iban);\n  if (!ib) return;\n  if (!ibantools.isValidIBAN(ib)) return;\n\n  const country = ib.slice(0, 2);\n  if (!datasets[country]) return;\n\n  // see https://en.wikipedia.org/wiki/International_Bank_Account_Number#IBAN_formats_by_country\n  let bankCode: string | undefined;\n  if (country === 'AT') bankCode = iban.substr(4, 5);\n  else if (country === 'BE') bankCode = iban.substr(4, 3);\n  else if (country === 'DE') bankCode = iban.substr(4, 8);\n  else if (country === 'ES') bankCode = iban.substr(4, 4);\n  else if (country === 'FR') bankCode = iban.substr(4, 5);\n  else if (country === 'LU') bankCode = iban.substr(4, 3);\n  else if (country === 'NL') bankCode = iban.substr(4, 4);\n  if (!bankCode) return;\n\n  return datasets[country][bankCode];\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(156);\n"],"names":["isValidIBAN","iban","validationOptions","allowQRIBAN","reg","RegExp","countryCode","slice","spec","countrySpecs","undefined","bban_regexp","chars","length","test","isValidBBAN","isValidIBANChecksum","isQRIBAN","ValidationErrorsIBAN","ValidationErrorsBIC","validateIBAN","result","errorCodes","valid","push","NoIBANCountry","WrongBBANLength","checkFormatBBAN","WrongBBANFormat","bban_validation_func","WrongAccountBankBranchChecksum","ChecksumNotNumber","indexOf","WrongIBANChecksum","QRIBANNotAllowed","NoIBANProvided","bban","replace","isSEPACountry","SEPA","includes","composeIBAN","params","formated_bban","electronicFormatIBAN","checksom","mod9710","replaceCharaterWithCode","extractIBAN","eFormatIBAN","account_indentifier","ac","split","starting","parseInt","ending","accountNumber","bank_identifier","bankIdentifier","branch_indentifier","branchIdentifier","bformat","toUpperCase","friendlyFormatIBAN","separator","electronic_iban","providedChecksum","validationString","concat","str","map","c","code","charCodeAt","toString","join","getCountrySpecifications","countyMap","countyCode","county","IBANRegistry","isValidBIC","bic","validateBIC","NoBICCountry","WrongBICFormat","NoBICProvided","extractBIC","inputBic","bankCode","locationCode","testBIC","branchCode","part","partInt","isNaN","NaN","checkMod9710BBAN","stripped","checkMod1110","toCheck","control","nr","index","charAt","checkCzechAndSlovakBBAN","weightsPrefix","weightsSuffix","controlPrefix","controlSuffix","prefix","substring","suffix","sum","remainder","checkFrenchBBAN","normalized","Array","from","setCountryBBANValidation","country","func","AD","AE","AF","AG","AI","AL","AM","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","checkingPart","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","weights","controlDigit","EG","EH","ER","ES","weightsBankBranch","weightsAccount","controlBankBranch","controlAccount","bankBranch","account","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","controlDigitBankBranch","toCheckBankBranch","endsWith","toCheckAccount","controlDigitAccount","remainder_1","remainder_2","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","bbanWithoutSpacesAndPeriods","bbanWithoutControlDigit","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","XK","YE","YT","ZA","ZM","ZW","datasets","ibanIsValid","ib","ibantools","ibanToBic","substr","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","r","Symbol","toStringTag","value","__webpack_exports__"],"sourceRoot":""}